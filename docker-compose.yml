version: "3.9"

services:

  rabbitmq:
    container_name: rabbitmq
    env_file:
        - .env
    networks:
      - SCGuildManagerNetwork
    ports:
        - 15672:15672
        - 5672:5672
    build: 
      context: .
      dockerfile: Infrastructure/RabbitMQ/Dockerfile


  vault:
    container_name: vault
    env_file:
      - .env
    privileged: true
    environment:
      VAULT_TOKEN: "${ValutToken}" # to be able to use the cli on dev
      VAULT_DEV_ROOT_TOKEN_ID: "${ValutToken}"
    networks:
      - SCGuildManagerNetwork
    ports:
      - 8200:8200
    image: vault:latest
    volumes:
      - ./Infrastructure/Vault/vault_init.sh:/vault/config/vault_init.sh
    #command: >
    #  su -c "apk update && apk add bash && 
    #         vault operator init -address=http://127.0.0.1:8200 &&
    #         /bin/chmod +x /vault/config/vault_init.sh && 
    #         /vault/config/vault_init.sh"
    restart: on-failure 
    depends_on:
      - rabbitmq

  #vault:
  #  container_name: vault
  #  env_file:
  #    - .env
  #  privileged: true
  #  environment:
  #    VAULT_TOKEN: "${ValutToken}" # to be able to use the cli on dev
  #    VAULT_DEV_ROOT_TOKEN_ID: "${ValutToken}"
  #    #VAULT_DEV_MODE: true
  #  command:
  #    - "server"
  #  networks:
  #    - SCGuildManagerNetwork
  #  ports:
  #    - 8200:8200
  #  build: 
  #    context: .
  #    dockerfile: Infrastructure/Vault/Dockerfile
  #  restart: on-failure:10
  #  depends_on:
  #    - rabbitmq

  guildmanagersc:
    container_name: GuildManagerSC
    env_file:
      - .env
    networks:
      - SCGuildManagerNetwork
    ports:
       - 7000:80
    build:
      context: .
      dockerfile: src/GuildManagerSC/Dockerfile
    restart: on-failure 

  mandrilapi:
    container_name: MandrilAPI
    env_file:
      - .env
    networks:
      - SCGuildManagerNetwork
    ports:
      - 7002:80
    build:
      context: .
      dockerfile: MandrilAPI/src/MandrilAPI/Dockerfile
    restart: on-failure 

networks:
  SCGuildManagerNetwork:
    driver: bridge
